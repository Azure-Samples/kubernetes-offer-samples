# Azure Vote UI control
title: "Azure Vote Custom App"
value1: Cats
value2: Dogs
getvalue: 'Get last one day usage'

global:
  azure:
    identity:
      # Application's Managed Service Identity (MSI) Client ID. ClientID can be used to generate authentication token to communicate to external services like Microsoft Marketplace Metering API
      clientId: "DONOTMODIFY" # Azure populates this value at deployment time
    marketplace:
      # id of the plan purchased for the Azure Marketplace Kubernetes application,to be used in usage event payload to metering api, for more information please refer: https://learn.microsoft.com/en-us/partner-center/marketplace/marketplace-metering-service-apis 
      planId: "DONOTMODIFY" # Azure populates this value at deployment time
    extension:
      # resource id of the Azure Marketplace Kubernetes application,to be used in usage event payload to metering api, for more information please refer: https://learn.microsoft.com/en-us/partner-center/marketplace/marketplace-metering-service-apis 
      resourceId: "DONOTMODIFY" # application's Azure Resource ID, Azure populates this value at deployment time
    images:
      frontend:
        digest: sha256:fed588cc86c00250bd25219e727f31927f377f7b3863ae130e98e936bea92d02
        image: azure-vote-custom-front
        registry: azurek8ssamples.azurecr.io/marketplaceimages
      backend:
        digest: sha256:9c8c3268cbe8925e2e4485ca0e48a42ff82393e2ec4c4026534fe3f4dd7d6786
        image: azure-vote-back
        registry: azurek8ssamples.azurecr.io/marketplaceimages
# how many frontends do we want?
replicaCount: 1

# Service controls
serviceNameFront: azure-vote-custom-front
serviceType: LoadBalancer